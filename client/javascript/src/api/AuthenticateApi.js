/**
 * CryptoQuery API
 * API for Senior Project
 *
 * OpenAPI spec version: v1
 * Contact: fsolano@nevada.unr.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AuthenticatePostDto', 'model/LoginModel'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AuthenticatePostDto'), require('../model/LoginModel'));
  } else {
    // Browser globals (root is window)
    if (!root.CryptoQueryApi) {
      root.CryptoQueryApi = {};
    }
    root.CryptoQueryApi.AuthenticateApi = factory(root.CryptoQueryApi.ApiClient, root.CryptoQueryApi.AuthenticatePostDto, root.CryptoQueryApi.LoginModel);
  }
}(this, function(ApiClient, AuthenticatePostDto, LoginModel) {
  'use strict';

  /**
   * Authenticate service.
   * @module api/AuthenticateApi
   * @version v1
   */

  /**
   * Constructs a new AuthenticateApi. 
   * @alias module:api/AuthenticateApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the authenticatePost operation.
     * @callback module:api/AuthenticateApi~authenticatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthenticatePostDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/LoginModel} opts.login 
     * @param {module:api/AuthenticateApi~authenticatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthenticatePostDto}
     */
    this.authenticatePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['login'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['application/json'];
      var returnType = AuthenticatePostDto;

      return this.apiClient.callApi(
        '/Authenticate', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
