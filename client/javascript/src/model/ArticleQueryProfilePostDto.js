/**
 * CryptoQuery API
 * API for Senior Project
 *
 * OpenAPI spec version: v1
 * Contact: fsolano@nevada.unr.edu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CryptoQueryApi) {
      root.CryptoQueryApi = {};
    }
    root.CryptoQueryApi.ArticleQueryProfilePostDto = factory(root.CryptoQueryApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ArticleQueryProfilePostDto model module.
   * @module model/ArticleQueryProfilePostDto
   * @version v1
   */

  /**
   * Constructs a new <code>ArticleQueryProfilePostDto</code>.
   * @alias module:model/ArticleQueryProfilePostDto
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>ArticleQueryProfilePostDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ArticleQueryProfilePostDto} obj Optional instance to populate.
   * @return {module:model/ArticleQueryProfilePostDto} The populated <code>ArticleQueryProfilePostDto</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('topics')) {
        obj['topics'] = ApiClient.convertToType(data['topics'], ['String']);
      }
      if (data.hasOwnProperty('complexity')) {
        obj['complexity'] = ApiClient.convertToType(data['complexity'], 'Number');
      }
      if (data.hasOwnProperty('quality')) {
        obj['quality'] = ApiClient.convertToType(data['quality'], 'Number');
      }
      if (data.hasOwnProperty('pushToken')) {
        obj['pushToken'] = ApiClient.convertToType(data['pushToken'], 'Number');
      }
      if (data.hasOwnProperty('pushEnabled')) {
        obj['pushEnabled'] = ApiClient.convertToType(data['pushEnabled'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<String>} topics
   */
  exports.prototype['topics'] = undefined;
  /**
   * @member {Number} complexity
   */
  exports.prototype['complexity'] = undefined;
  /**
   * @member {Number} quality
   */
  exports.prototype['quality'] = undefined;
  /**
   * @member {Number} pushToken
   */
  exports.prototype['pushToken'] = undefined;
  /**
   * @member {Boolean} pushEnabled
   */
  exports.prototype['pushEnabled'] = undefined;



  return exports;
}));


